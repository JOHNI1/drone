<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="inertial_macros.xacro"/>

    <xacro:macro name="drone_arm" params="num parent_link dis_from_center length diameter arm_incline_angle arm_mesh prop_mesh cw prop_size_multiplier cylinder_d cylinder_l a_mass a_iner:='100000000 0 0 0 0 0' cla cp area r_mass r_iner angle"> 
        <xacro:property name="base_arm_joint" value="base_arm_joint_${num}" />
        <xacro:property name="arm_link" value="arm_link_${num}" />
        <xacro:property name="rotor_joint" value="rotor_joint_${num}" />
        <xacro:property name="prop_link" value="prop_link_${num}" />
        <xacro:property name="rotor_blade_0" value="rotor_${num}_blade_0" />
        <xacro:property name="rotor_blade_1" value="rotor_${num}_blade_1" />

        <joint name="${base_arm_joint}" type="fixed">
            <parent link="${parent_link}"/>
            <child link="${arm_link}"/>
            <origin xyz="0 0 0" rpy="0 0 ${angle + pi}"/>
        </joint>

        <xacro:link_creator_i link_name="${arm_link}" pose_xyz="0 ${cos(arm_incline_angle) * (length / 2.0) + dis_from_center} ${sin(arm_incline_angle) * (length / 2.0)}" pose_rpy="${arm_incline_angle + 1.57079632679} 0 0" mesh_path="${arm_mesh}" scale_xyz="${diameter} ${diameter} ${length}" mass="${a_mass}" iner="${a_iner}"/>


        <joint name="${rotor_joint}" type="continuous">
            <parent link="${arm_link}"/>
            <child link="${prop_link}"/>
            <origin xyz="0 ${cos(arm_incline_angle) * length + dis_from_center} ${sin(arm_incline_angle) * length}" rpy="${arm_incline_angle} 0 0"/>
            <axis xyz="0 0 1"/>
            <dynamics damping="0.004"/>       
        </joint>
        <gazebo reference="${rotor_joint}">
            <physics>
                <ode>
                    <implicit_spring_damper>1</implicit_spring_damper>
                </ode>
            </physics>
        </gazebo>
        
        <xacro:prop_link_creator link_name="${prop_link}" pose_xyz="0 0 0.03" pose_rpy="0 -0 0" mesh_path="${prop_mesh}" scale_xyz="${prop_size_multiplier} ${prop_size_multiplier} ${prop_size_multiplier}" col_scale_xyz="${cylinder_d} 0 ${cylinder_l}" mass="${r_mass}" iner="${r_iner}"/>
        
        <xacro:property name="cp_negative" value="${-1 * cp}"/>

        <xacro:if value="${cw}">
            <gazebo>
                <plugin name="${rotor_blade_0}" filename="libLiftDragPlugin.so">
                    <a0>0.3</a0>
                    <alpha_stall>1.4</alpha_stall>
                    <cla>${cla}</cla>
                    <cda>0.10</cda>
                    <cma>0.00</cma>
                    <cla_stall>-0.025</cla_stall>
                    <cda_stall>0.0</cda_stall>
                    <cma_stall>0.0</cma_stall>
                    <area>${area}</area>
                    <air_density>1.2041</air_density>
                    <cp>${cp} 0 0</cp>
                    <forward>0 -1 0</forward>
                    <upward>0 0 1</upward>
                    <link_name>${prop_link}</link_name>
                </plugin>
                <plugin name="${rotor_blade_1}" filename="libLiftDragPlugin.so">
                    <a0>0.3</a0>
                    <alpha_stall>1.4</alpha_stall>
                    <cla>${cla}</cla>
                    <cda>0.10</cda>
                    <cma>0.00</cma>
                    <cla_stall>-0.025</cla_stall>
                    <cda_stall>0.0</cda_stall>
                    <cma_stall>0.0</cma_stall>
                    <area>${area}</area>
                    <air_density>1.2041</air_density>
                    <cp>${cp_negative} 0 0</cp>
                    <forward>0 1 0</forward>
                    <upward>0 0 1</upward>
                    <link_name>${prop_link}</link_name>
                </plugin>
            </gazebo>
        </xacro:if>
        <xacro:unless value="${cw}">
            <gazebo>
                <plugin name="${rotor_blade_0}" filename="libLiftDragPlugin.so">
                    <a0>0.3</a0>
                    <alpha_stall>1.4</alpha_stall>
                    <cla>${cla}</cla>
                    <cda>0.10</cda>
                    <cma>0.00</cma>
                    <cla_stall>-0.025</cla_stall>
                    <cda_stall>0.0</cda_stall>
                    <cma_stall>0.0</cma_stall>
                    <area>${area}</area>
                    <air_density>1.2041</air_density>
                    <cp>${cp} 0 0</cp>
                    <forward>0 1 0</forward>
                    <upward>0 0 1</upward>
                    <link_name>${prop_link}</link_name>
                </plugin>
                <plugin name="${rotor_blade_1}" filename="libLiftDragPlugin.so">
                    <a0>0.3</a0>
                    <alpha_stall>1.4</alpha_stall>
                    <cla>${cla}</cla>
                    <cda>0.10</cda>
                    <cma>0.00</cma>
                    <cla_stall>-0.025</cla_stall>
                    <cda_stall>0.0</cda_stall>
                    <cma_stall>0.0</cma_stall>
                    <area>${area}</area>
                    <air_density>1.2041</air_density>
                    <cp>${cp_negative} 0 0</cp>
                    <forward>0 -1 0</forward>
                    <upward>0 0 1</upward>
                    <link_name>${prop_link}</link_name>
                </plugin>
            </gazebo>
        </xacro:unless>
        <gazebo reference="${arm_link}">
            <visual>
                <material>
                    <script>
                        <name>Gazebo/DarkGrey</name>
                    </script>
                </material>
            </visual>
        </gazebo>
        <gazebo reference="${prop_link}">
            <visual>
                <material>
                    <script>
                        <name>Gazebo/DarkGrey</name>
                    </script>
                </material>
            </visual>
        </gazebo>
    </xacro:macro>





    <xacro:macro name="set_mesh" params="mesh scale">
        <xacro:if value="${mesh == 'Box'}">
            <box size="${scale}"/>
        </xacro:if>
        <xacro:if value="${mesh == 'Cylinder'}">
            <xacro:property name="scale_list" value="${scale.split(' ')}" />
            <cylinder radius="${float(scale_list[0]) / 2}" length="${scale_list[2]}"/>
        </xacro:if>
        <xacro:if value="${mesh == 'Sphere'}">
            <xacro:property name="scale_list" value="${scale.split(' ')}" />
            <sphere radius="${float(scale_list[0]) / 2}"/>
        </xacro:if>
        <xacro:if value="${mesh != 'Box'}">
            <xacro:if value="${mesh != 'Cylinder'}">
                <xacro:if value="${mesh != 'Sphere'}">
                    <mesh filename="${mesh}" scale="${scale}"/>
                </xacro:if>
            </xacro:if>
        </xacro:if>
    </xacro:macro>




    <xacro:macro name="link_creator_foundation" params="link_name pose_xyz pose_rpy mesh_path:='Box' scale_xyz **extra_visual **extra_settings">


        <link name="${link_name}">
            <visual>
                <geometry>
                    <xacro:set_mesh mesh="${mesh_path}" scale="${scale_xyz}" />
                </geometry>
                <origin xyz="${pose_xyz}" rpy="${pose_rpy}"/>
                <xacro:insert_block name="extra_visual"/>
            </visual>
            <xacro:insert_block name="extra_settings"/>
        </link>
    </xacro:macro>

    <xacro:macro name="link_creator" params="link_name pose_xyz pose_rpy mesh_path:='Box' scale_xyz">
        <xacro:link_creator_foundation link_name="${link_name}" pose_xyz="${pose_xyz}" pose_rpy="${pose_rpy}" mesh_path="${mesh_path}" scale_xyz="${scale_xyz}">
            <extra_visual/>
            <extra_settings/>
        </xacro:link_creator_foundation>
    </xacro:macro>



    <xacro:macro name="link_creator_i_foundation" params="link_name pose_xyz pose_rpy mesh_path:='Box' col_mesh_path:='None' scale_xyz col_scale_xyz:='100000000 0 0' seperate_collider_xyzrpy:='100000000 0 0 0 0 0' center_mass_xyz:='0 0 0' mass iner:='100000000 0 0 0 0 0' **extra_collision **extra_visual **extra_settings">
        <xacro:link_creator_foundation link_name="${link_name}" pose_xyz="${pose_xyz}" pose_rpy="${pose_rpy}" mesh_path="${mesh_path}" scale_xyz="${scale_xyz}">
            
            <extra_visual><xacro:insert_block name="extra_visual"/></extra_visual>
            <extra_settings>
                <collision>
                    <geometry>
                        <xacro:if value="${col_scale_xyz == '100000000 0 0'}">
                            <xacro:if value="${col_mesh_path == 'None'}">
                                <xacro:set_mesh mesh="${mesh_path}" scale="${scale_xyz}" />
                            </xacro:if>
                            <xacro:if value="${col_mesh_path != 'None'}">
                                <xacro:set_mesh mesh="${col_mesh_path}" scale="${scale_xyz}" />
                            </xacro:if>
                        </xacro:if>
                        <xacro:if value="${col_scale_xyz != '100000000 0 0'}">
                            <xacro:if value="${col_mesh_path == 'None'}">
                                <xacro:set_mesh mesh="${mesh_path}" scale="${col_scale_xyz}" />
                            </xacro:if>
                            <xacro:if value="${col_mesh_path != 'None'}">
                                <xacro:set_mesh mesh="${col_mesh_path}" scale="${col_scale_xyz}" />
                            </xacro:if>
                        </xacro:if>
                    </geometry>
                    <xacro:if value="${seperate_collider_xyzrpy == '100000000 0 0 0 0 0'}">
                        <origin xyz="${pose_xyz}" rpy="${pose_rpy}"/>
                    </xacro:if>
                    <xacro:if value="${seperate_collider_xyzrpy != '100000000 0 0 0 0 0'}">
                        <xacro:property name="seperate_collider_xyzrpy_list" value="${seperate_collider_xyzrpy.split(' ')}" />
                        <origin xyz="${seperate_collider_xyzrpy_list[0]} ${seperate_collider_xyzrpy_list[1]} ${seperate_collider_xyzrpy_list[2]}" rpy="${seperate_collider_xyzrpy_list[3]} ${seperate_collider_xyzrpy_list[4]} ${seperate_collider_xyzrpy_list[5]}"/>
                    </xacro:if>
                    <xacro:insert_block name="extra_collision"/>
                </collision>

                <xacro:if value="${iner == '100000000 0 0 0 0 0'}">
                    <xacro:property name="scale_xyz_list" value="${scale_xyz.split(' ')}" />
                    <xacro:inertial_box mass="${mass}" x="${float(scale_xyz_list[0])}" y="${float(scale_xyz_list[1])}" z="${float(scale_xyz_list[2])}" xyz="${center_mass_xyz}" rpy="0 0 0"/>
                </xacro:if>
                <xacro:if value="${iner != '100000000 0 0 0 0 0'}">
                    <xacro:property name="iner_list" value="${iner.split(' ')}" />
                    <inertial>
                        <origin xyz="${center_mass_xyz}" rpy="0 0 0"/>
                        <mass value="${mass}"/>
                        <inertia ixx="${iner_list[0]}" ixy="${iner_list[1]}" ixz="${iner_list[2]}" iyy="${iner_list[3]}" iyz="${iner_list[4]}" izz="${iner_list[5]}"/>
                    </inertial>
                </xacro:if>
                <xacro:insert_block name="extra_settings"/>
            </extra_settings>
        </xacro:link_creator_foundation>
    </xacro:macro>

    <xacro:macro name="link_creator_i" params="link_name pose_xyz pose_rpy mesh_path:='Box' col_mesh_path:='None' scale_xyz col_scale_xyz:='100000000 0 0' seperate_collider_xyzrpy:='100000000 0 0 0 0 0' center_mass_xyz:='0 0 0' mass iner:='100000000 0 0 0 0 0'">
        <xacro:link_creator_i_foundation link_name="${link_name}" pose_xyz="${pose_xyz}" pose_rpy="${pose_rpy}" mesh_path="${mesh_path}" col_mesh_path="${col_mesh_path}" scale_xyz="${scale_xyz}" col_scale_xyz="${col_scale_xyz}" seperate_collider_xyzrpy="${seperate_collider_xyzrpy}" center_mass_xyz="${center_mass_xyz}" mass="${mass}" iner="${iner}">
            <extra_collision/>
            <extra_visual/>
            <extra_settings/>
        </xacro:link_creator_i_foundation>
    </xacro:macro>



    <xacro:macro name="prop_link_creator" params="link_name pose_xyz pose_rpy mesh_path scale_xyz col_scale_xyz seperate_collider_xyzrpy:='100000000 0 0 0 0 0' center_mass_xyz:='0 0 0' mass iner">

        <xacro:link_creator_i_foundation link_name="${link_name}" pose_xyz="${pose_xyz}" pose_rpy="${pose_rpy}" mesh_path="${mesh_path}" col_mesh_path="Cylinder" scale_xyz="${scale_xyz}" col_scale_xyz="${col_scale_xyz}" seperate_collider_xyzrpy="${seperate_collider_xyzrpy}" center_mass_xyz="${center_mass_xyz}" mass="${mass}"  iner="${iner}">
            <extra_collision>
                <surface>
                    <contact>
                        <ode/>
                    </contact>
                    <friction>
                        <ode/>
                    </friction>
                </surface>
            </extra_collision>
            <extra_visual/>
            <extra_settings>
                <velocity_decay/>
            </extra_settings>
        </xacro:link_creator_i_foundation>
        <gazebo reference="${link_name}">
            <!-- <material>Gazebo/Red</material> -->
            <self_collide>0</self_collide>
        </gazebo>
    </xacro:macro>
</robot>



